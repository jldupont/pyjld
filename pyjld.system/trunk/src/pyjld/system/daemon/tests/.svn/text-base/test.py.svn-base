#!/usr/bin/env python
"""
    @author: Jean-Lou Dupont
"""
__author__  = "Jean-Lou Dupont"
__email     = "python (at) jldupont.com"
__fileid    = "$Id$"

import signal

import pyjld.system.daemon as daemon
import pyjld.logger as logger



class TestApp(object):
    

    def __init__(self, name):
        self.name = name
        self.initLogger()
                
    def exit(self):
        self.logger.info("TestApp_exiting")
        
    
    def before_start(self):
        self.logger.info("TestApp.before_start")
        
        return False #ie. don't abort
        
    def before_run(self):
        # We need to reinit the logger because
        #  we are now running in daemon mode.
        self.initLogger()
        self.logger.info("TestApp.before_run")
        return False #ie. don't abort
    
    
    def run(self):
        self.logger.info("TestApp.run()")
        
        while(True):
            signal.pause()
            
            
    def initLogger(self):
        self.logger = logger.MsgLogger(self.name, {}, include_syslog = True)
        
         

if __name__ == "__main__":
    """ Tests
    """
    import sys
    import traceback
    
    cmds = ['start', 'stop', 'restart']
    app = TestApp('TestApp')
    d = daemon.DaemonRunner( app )
    
    try:
        cmd = sys.argv[1]
    except:
        cmd = None
        
    if (not cmd in cmds):
        print "unknown command"
        sys.exit(0)
    
    try:
        getattr( d, "cmd_" + cmd )()
        
    except daemon.DaemonRunnerException,e:
        print e

    except Exception,e:
        print "msg: [%s]" % e
        traceback.print_exc()
