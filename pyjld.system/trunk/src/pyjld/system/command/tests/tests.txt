Normal List
===========

>>> from pyjld.system.command.ui import ExOptionParser as exp
>>> options = [
...				{'short':'-s', 'long':'--sort', 'help':"help on sort function"},
...			]
>>> parser = exp()
>>> parser.ex_add_options( options )
>>> print parser._short_opt
{'-h': <Option at ...: -h/--help>, '-s': <Option at ...: -s/--sort>}
>>> print parser._long_opt
{'--sort': <Option at ...: -s/--sort>, '--help': <Option at ...: -h/--help>}


Normal List2
============

>>> from pyjld.system.command.ui import ExOptionParser as exp
>>> options = [
...				{'short':'-s', 'help':"help on sort function"},
...				{'long':'--tail', 'help':"help on tail function"},
...			]
>>> parser = exp()
>>> parser.ex_add_options( options )
>>> print parser._short_opt
{'-h': <Option at ...: -h/--help>, '-s': <Option at ...: -s>}
>>> print parser._long_opt
{'--help': <Option at ...: -h/--help>, '--tail': <Option at ...: --tail>}


List with custom entries
=========================

>>> from pyjld.system.command.ui import ExOptionParser as exp
>>> options = [
...				{'short':'-s', 'long':'--sort', 'help':"help on sort function", 'custom':'Custom Option'},
...			]
>>> parser = exp()
>>> parser.ex_add_options( options )
>>> print parser._short_opt
{'-h': <Option at ...: -h/--help>, '-s': <Option at ...: -s/--sort>}
>>> print parser._long_opt
{'--sort': <Option at ...: -s/--sort>, '--help': <Option at ...: -h/--help>}
>>> print options  # original list shouldn't change
[{'short': '-s', 'help': 'help on sort function', 'long': '--sort', 'custom': 'Custom Option'}]



>>> ref_options =[
...		{'short':'-s', 'dest':'config_server',  'action':'store',      'help':'config_server',  'reg': True,  'default': None,  'type':'string'},
...		{'short':'-p', 'dest':'config_port',    'action':'store',      'help':'config_port',    'reg': True,  'default': None  },        
...		{'short':'-l', 'dest':'config_syslog',  'action':'store_true', 'help':'config_syslog',  'reg': False, 'default': False },
...		{'short':'-e', 'dest':'config_export',  'action':'store_true', 'help':'config_export',  'reg': False, 'default': False },  
...		{'short':'-a', 'dest':'config_autostop','action':'store_true', 'help':'config_autostop','reg': False, 'default': False },
...		{'short':'-z', 'dest':'config_eventmgr','action':'store',      'help':'config_eventmgr','reg': True,  'default': None, 'type':'string' },  
...		]
>>> from pyjld.system.command.ui import BaseCmdUI as bcmdui
>>> from pyjld.system.command.base import BaseCmd as bcmd
>>> b=bcmdui(None, ref_options)
>>> b.handleArguments() #1
>>> print b.command
None
>>> args = ['-a', 'some_command']
>>> b.handleArguments(args=args) #2
>>> print b.command
some_command
>>> print b.options # CHECK1
{'config_syslog': False, 'config_eventmgr': None, 'config_server': None, 'config_autostop': True, 'config_export': False, 'config_port': None}
>>> args = ['-s', 'some_server', 'some_command2']
>>> b.handleArguments(args=args) #3
>>> print b.command
some_command2
>>> print b.options # CHECK2
{'config_syslog': False, 'config_eventmgr': None, 'config_server': 'some_server', 'config_autostop': False, 'config_export': False, 'config_port': None}




>>> ref_options =[
...		{'short':'-s', 'dest':'config_server',  'action':'store',      'help':'config_server',  'reg': True,  'default': None,  'type':'string'},
...		{'short':'-p', 'dest':'config_port',    'action':'store',      'help':'config_port',    'reg': True,  },
...		{'short':'-l', 'dest':'config_syslog',  'action':'store',      'help':'config_syslog',  'reg': False, 'default': False },
...		]
>>> args = ['-s', 'some_server', 'some_command']        
>>> b=bcmdui(None, ref_options)
>>> b.handleArguments(args=args) #4
>>> print b.command
some_command
>>> print b.options # CHECK3
{'config_syslog': False, 'config_server': 'some_server', 'config_port': None}




>>> ref_options =[
...		{'short':'-s', 'long':'--server', 'dest':'config_server',  'action':'store',      'help':'config_server',  'reg': True,  'default': None,  'type':'string'},
...		]
>>> args = ['-s', 'some_server', 'some_command']
>>> b=bcmdui(None,ref_options)        
>>> b.handleArguments(args=args) #5
>>> print b.options # CHECK4
{'config_server': 'some_server'}


>>> args = ['--server', 'some_server2', 'some_command2'] 
>>> b.handleArguments(args=args) #6
>>> print b.options # CHECK5
{'config_server': 'some_server2'}

>>> ref_options =[
...		{'short':'-s', 'dest':'config_server',  'action':'store',      'help':'config_server',  'reg': True,  'default': None,  'type':'string'},
...		{'short':'-p', 'dest':'config_port',    'action':'store',      'help':'config_port',    'reg': True,  },
...		{'short':'-l', 'dest':'config_syslog',  'action':'store',      'help':'config_syslog',  'reg': False, 'default': False },
...		]
>>> args = ['-s', 'some_server', 'some_command']        
>>> reg={'config_port':'some_port_in_registry'}
>>> c=bcmd()
>>> b=bcmdui(None, ref_options)
>>> b.handleArguments(args=args) #6
>>> b.prepareCmd(c,reg)
>>> print reg # CHECK6
{'config_server': 'some_server', 'config_port': 'some_port_in_registry'}
>>> print c.getConfig()
{'config_syslog': False, 'config_server': 'some_server', 'config_port': 'some_port_in_registry'}
